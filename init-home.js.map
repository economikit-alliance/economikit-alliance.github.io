{"version":3,"file":"init-home.js","sources":["../src/init-home.js"],"sourcesContent":["import { randomizeEKLogo } from './main'\n\n// init\nfunction initEKLogo() { randomizeEKLogo(18000, 3, 2000); }\ninitEKLogo();\n\n// reload logo and colours when scrolling to new sections\nconst targets = document.querySelectorAll('h1,h2');\nconst options = {\n  root: null,\n  threshold: 0.25, // 0 - 1 this work as a trigger.\n};\n\nconst observer = new IntersectionObserver(entries => {\n  entries.forEach(initEKLogo);\n}, options);\ntargets.forEach(target => {\n  observer.observe(target);\n});\n\n// trigger logo downscaling as soon as we start scrolling\nconst textLogo = document.getElementById('text1451');\nconst logo = document.getElementById('ek-header');\n\nlet fullscreenRedrawTimer;\n\nconst oldScroll = window.onscroll || function () {};\nfunction checkScroll (e) {\n  // large hero mode (at top)\n  if (window.scrollY < window.innerHeight * 0.3) {\n    // regenerate frequently\n    if (!fullscreenRedrawTimer) {\n      fullscreenRedrawTimer = setInterval(() => {initEKLogo(); }, 8000);\n    }\n\n    textLogo.classList.remove('invisible');\n    textLogo.classList.add('visible');\n    logo.classList.remove('mini');\n    logo.classList.remove('maxi');\n    logo.classList.add('mega');\n  } else {\n    // only regenerate when scrolling past headers\n    if (fullscreenRedrawTimer) {\n      clearInterval(fullscreenRedrawTimer);\n      fullscreenRedrawTimer = null;\n    }\n\n    if(window.scrollY < window.innerHeight) {\n      textLogo.classList.remove('invisible');\n      textLogo.classList.add('visible');\n      logo.classList.remove('mini');\n      logo.classList.add('maxi');\n      logo.classList.remove('mega');\n    } else {\n      textLogo.classList.add('invisible');\n      textLogo.classList.remove('visible');\n      logo.classList.add('mini');\n      logo.classList.remove('maxi');\n      logo.classList.remove('mega');\n    }\n  }\n\n  oldScroll(e);\n}\ncheckScroll();\nsetTimeout(() => logo.classList.add('inited'), 500);  // enables CSS transitions after setting initial state\nwindow.onscroll = checkScroll;\n"],"names":["initEKLogo","randomizeEKLogo","targets","document","querySelectorAll","observer","IntersectionObserver","entries","forEach","root","threshold","target","observe","textLogo","getElementById","logo","fullscreenRedrawTimer","oldScroll","window","onscroll","checkScroll","e","scrollY","innerHeight","setInterval","classList","remove","add","clearInterval","setTimeout"],"mappings":"0CAGA,SAASA,IAAeC,EAAgB,KAAO,EAAG,KAClDD,IAGA,MAAME,EAAUC,SAASC,iBAAiB,SAMpCC,EAAW,IAAIC,sBAAqBC,IACxCA,EAAQC,QAAQR,KANF,CACdS,KAAM,KACNC,UAAW,MAMbR,EAAQM,SAAQG,IACdN,EAASO,QAAQD,MAInB,MAAME,EAAWV,SAASW,eAAe,YACnCC,EAAOZ,SAASW,eAAe,aAErC,IAAIE,EAEJ,MAAMC,EAAYC,OAAOC,UAAY,aACrC,SAASC,EAAaC,GAEhBH,OAAOI,QAA+B,GAArBJ,OAAOK,aAErBP,IACHA,EAAwBQ,aAAY,KAAOxB,MAAiB,MAG9Da,EAASY,UAAUC,OAAO,aAC1Bb,EAASY,UAAUE,IAAI,WACvBZ,EAAKU,UAAUC,OAAO,QACtBX,EAAKU,UAAUC,OAAO,QACtBX,EAAKU,UAAUE,IAAI,UAGfX,IACFY,cAAcZ,GACdA,EAAwB,MAGvBE,OAAOI,QAAUJ,OAAOK,aACzBV,EAASY,UAAUC,OAAO,aAC1Bb,EAASY,UAAUE,IAAI,WACvBZ,EAAKU,UAAUC,OAAO,QACtBX,EAAKU,UAAUE,IAAI,QACnBZ,EAAKU,UAAUC,OAAO,UAEtBb,EAASY,UAAUE,IAAI,aACvBd,EAASY,UAAUC,OAAO,WAC1BX,EAAKU,UAAUE,IAAI,QACnBZ,EAAKU,UAAUC,OAAO,QACtBX,EAAKU,UAAUC,OAAO,UAI1BT,EAAUI,GAEZD,IACAS,YAAW,IAAMd,EAAKU,UAAUE,IAAI,WAAW,KAC/CT,OAAOC,SAAWC"}